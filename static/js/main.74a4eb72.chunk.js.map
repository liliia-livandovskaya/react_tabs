{"version":3,"sources":["components/Tabs/Tabs.tsx","App.tsx","index.tsx"],"names":["Tabs","tabs","selectedTabId","onTabSelected","selectedTab","find","tab","id","isTabSelected","className","map","classNames","href","onClick","handleTabClick","title","content","App","useState","setSelectedTab","ReactDOM","render","document","getElementById"],"mappings":"8MAUaA,EAAwB,SAAC,GAI/B,IAHLC,EAGI,EAHJA,KACAC,EAEI,EAFJA,cACAC,EACI,EADJA,cAEMC,EAAcH,EAAKI,MAAK,SAAAC,GAAG,OAAIA,EAAIC,KAAOL,MAAkBD,EAAK,GACjEO,EAAgB,SAACF,GAAD,OAAcF,EAAYG,KAAOD,EAAIC,IAU3D,OACE,gCACE,qBAAKE,UAAU,gBAAf,SACE,6BACGR,EAAKS,KAAI,SAAAJ,GAAG,OACX,oBAEEG,UAAWE,IAAW,CACpB,YAAaH,EAAcF,KAH/B,SAME,mBACEM,KAAI,WAAMN,EAAIC,IACdM,QAAS,kBArBA,SAACP,GAClBE,EAAcF,IAIlBH,EAAcG,GAgBaQ,CAAeR,IAFhC,SAIGA,EAAIS,SATFT,EAAIC,WAgBjB,qBAAKE,UAAU,QAAQ,UAAQ,cAA/B,SACGL,EAAYY,cC3CRf,EAAc,CACzB,CAAEM,GAAI,QAASQ,MAAO,QAASC,QAAS,eACxC,CAAET,GAAI,QAASQ,MAAO,QAASC,QAAS,eACxC,CAAET,GAAI,QAASQ,MAAO,QAASC,QAAS,gBAG7BC,EAAgB,WAC3B,MAAsCC,mBAASjB,EAAK,IAApD,mBAAOG,EAAP,KAAoBe,EAApB,KAEA,OACE,sBAAKV,UAAU,UAAf,UACE,qBAAIA,UAAU,QAAd,4BAEG,IACAL,EAAYW,SAGf,cAAC,EAAD,CACEd,KAAMA,EACNC,cAAeE,EAAYG,GAC3BJ,cAAegB,QCtBvBC,IAASC,OAAO,cAAC,EAAD,IAASC,SAASC,eAAe,W","file":"static/js/main.74a4eb72.chunk.js","sourcesContent":["import classNames from 'classnames';\nimport React from 'react';\nimport { Tab } from '../../types/Tab';\n\ntype Props = {\n  tabs: Tab[],\n  selectedTabId: string,\n  onTabSelected: (tab: Tab) => void,\n};\n\nexport const Tabs: React.FC<Props> = ({\n  tabs,\n  selectedTabId,\n  onTabSelected,\n}) => {\n  const selectedTab = tabs.find(tab => tab.id === selectedTabId) || tabs[0];\n  const isTabSelected = (tab: Tab) => selectedTab.id === tab.id;\n\n  const handleTabClick = (tab: Tab) => {\n    if (isTabSelected(tab)) {\n      return;\n    }\n\n    onTabSelected(tab);\n  };\n\n  return (\n    <div>\n      <div className=\"tabs is-boxed\">\n        <ul>\n          {tabs.map(tab => (\n            <li\n              key={tab.id}\n              className={classNames({\n                'is-active': isTabSelected(tab),\n              })}\n            >\n              <a\n                href={`#${tab.id}`}\n                onClick={() => handleTabClick(tab)}\n              >\n                {tab.title}\n              </a>\n            </li>\n          ))}\n        </ul>\n      </div>\n\n      <div className=\"block\" data-cy=\"tab-content\">\n        {selectedTab.content}\n      </div>\n    </div>\n  );\n};\n","import React, { useState } from 'react';\nimport './App.scss';\n\nimport { Tabs } from './components/Tabs/Tabs';\nimport { Tab } from './types/Tab';\n\nexport const tabs: Tab[] = [\n  { id: 'tab-1', title: 'Tab 1', content: 'Some text 1' },\n  { id: 'tab-2', title: 'Tab 2', content: 'Some text 2' },\n  { id: 'tab-3', title: 'Tab 3', content: 'Some text 3' },\n];\n\nexport const App: React.FC = () => {\n  const [selectedTab, setSelectedTab] = useState(tabs[0]);\n\n  return (\n    <div className=\"section\">\n      <h1 className=\"title\">\n        Selected tab is\n        {' '}\n        {selectedTab.title}\n      </h1>\n\n      <Tabs\n        tabs={tabs}\n        selectedTabId={selectedTab.id}\n        onTabSelected={setSelectedTab}\n      />\n    </div>\n  );\n};\n\nexport default App;\n","import ReactDOM from 'react-dom';\nimport 'bulma/css/bulma.css';\nimport { App } from './App';\n\nReactDOM.render(<App />, document.getElementById('root'));\n"],"sourceRoot":""}